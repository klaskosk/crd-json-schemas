{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "x-SPDX-FileCopyRightText": "Red Hat",
  "x-SPDX-License-Identifier": "Apache-2.0",
  "title": "HardwareTemplate",
  "description": "HardwareTemplate is the Schema for the hardwaretemplates API. It defines hardware templates for provisioning nodes with specific hardware configurations and requirements.",
  "type": "object",
  "required": [
    "apiVersion",
    "kind",
    "metadata",
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": ["clcm.openshift.io/v1alpha1"]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": ["HardwareTemplate"]
    },
    "metadata": {
      "description": "Standard object metadata. Includes fields such as name, namespace, labels, and annotations. Used to uniquely identify and organize the resource within Kubernetes.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the HardwareTemplate object. Must be unique within a namespace.",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace for the HardwareTemplate object.",
          "type": "string"
        },
        "labels": {
          "description": "Labels to attach to the object. Key-value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "description": "Annotations to attach to the object. Key-value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "spec": {
      "description": "HardwareTemplateSpec defines the desired state of HardwareTemplate",
      "type": "object",
      "required": [
        "bootInterfaceLabel",
        "hardwarePluginRef",
        "nodeGroupData"
      ],
      "properties": {
        "bootInterfaceLabel": {
          "description": "BootInterfaceLabel is the label of the boot interface.",
          "type": "string",
          "minLength": 1
        },
        "hardwarePluginRef": {
          "description": "HardwarePluginRef is the name of the HardwarePlugin.",
          "type": "string",
          "minLength": 1
        },
        "hardwareProvisioningTimeout": {
          "description": "HardwareProvisioningTimeout defines the timeout duration string for the hardware provisioning.",
          "type": "string"
        },
        "nodeGroupData": {
          "description": "NodeGroupData defines a collection of NodeGroupData items",
          "type": "array",
          "minItems": 1,
          "items": {
            "description": "NodeGroupData provides the necessary information for populating a node allocation request",
            "type": "object",
            "required": [
              "hwProfile",
              "name",
              "role"
            ],
            "properties": {
              "hwProfile": {
                "description": "Hardware profile reference for this node group",
                "type": "string",
                "minLength": 1
              },
              "name": {
                "description": "Name of the node group",
                "type": "string",
                "minLength": 1
              },
              "resourcePoolId": {
                "description": "ResourcePoolId is the identifier for the Resource Pool in the hardware manager instance.",
                "type": "string"
              },
              "resourceSelector": {
                "description": "ResourceSelector defines key-value pairs for selecting resources",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "role": {
                "description": "Role of the node in the cluster",
                "type": "string",
                "enum": ["master", "worker"]
              }
            }
          }
        }
      }
    },
    "status": {
      "description": "HardwareTemplateStatus defines the observed state of HardwareTemplate",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Represents the observations of a HardwareTemplate's current state",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition. This may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": ["True", "False", "Unknown"]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$"
              }
            }
          }
        }
      }
    }
  }
}
